/*****************************************************
 Se asume que viene un archivo con indicadores operaciones y cuentas
    JavaCC 
*****************************************************/
options {
 STATIC = false;
}

PARSER_BEGIN(AnalizadorLexico)
package dominio;
import java.io.*;

public class AnalizadorLexico
{

//   public AnalizadorLexico() {}

//   public static void main(StringReader Cadena)throws ParseException 
//   {
   
//     BufferedReader Nuevo = new BufferedReader(new InputStreamReader(file));
//     StringReader Cadena;
//     boolean Leer=true;
 //    AnalizadorLexico parser;
//	 An	alizadorLexico parser;
//     try
//     {
//        Cadena=Nuevo.readLine();
//     }
//     catch(IOException e)
//     {
//            System.out.println("Error al leer la cadena");
 //           return;
 //    }

 //      parser = new AnalizadorLexico(Cadena);
//        parser = new AnalizadorLexico(new InputStreamReader(file));
//     while(Leer)
//
 //      try
//       {
//          Leer= AnalizadorLexico.Programa();
//       }
//       catch (ParseException e)
//       {
//          System.out.println("Error 3: \"Se esperaba otro componente lexico\"");
//          Token t=getNextToken();
//          System.out.println(t);
//       }
//   } 
}

PARSER_END(AnalizadorLexico)

SKIP:
{

   <"\n"|"\r">
}

TOKEN:
{
  <LCORCHETE:"[">
//  {System.out.println("CORCHETE -->"+image);}  
 |<RCORCHETE:"]">
// {System.out.println("CORCHETE -->"+image);}
 |<LLLAVES:"{">
// {System.out.println("LLLAVE -->"+image);}
 |<RLLAVES:"}"> 
// {System.out.println("RLLAVE -->"+image);}
 |<LPAREN: "(" >
// {System.out.println("LPAREN -->"+image);}
 |<RPAREN: ")" >
// {System.out.println("RPAREN -->"+image);}
 |<DIGITOS:(["0"- "9"])+> 
// {System.out.println("DIGITOS -->"+image);}
 |<COMILLA:"\"">
// {System.out.println("COMILLA -->"+image);}
 |<INDICADORES:(<COMILLA>"indicadores"<COMILLA>)>
// {System.out.println("INDICADORES -->"+image);}
 |<FORMULAS:(<COMILLA>"formula"<COMILLA>)>
// {System.out.println("FORMULAS -->"+image);}
 |<CUENTAS:(<COMILLA>"cuentas"<COMILLA>)>
// {System.out.println("CUENTA -->"+image);}
 |<ESPACIO:" ">
// {System.out.println("ESPACIO -->"+image);}
 |<TABULACION:"\t">
// {System.out.println("TABULACION -->"+image);}
 |<FORMATOFECHA:(<COMILLA>(<DIGITOS>)+"-"(<DIGITOS>)+"-"(<DIGITOS>)+<COMILLA>)>
// {System.out.println("FORMATOFECHA -->"+image);}
 |<COMA: ",">
// {System.out.println("COMA -->"+image);}
 |<DOSPUNTOS: ":"> 
//{System.out.println("DOSPUNTOS -->"+image);} 
 |<ID:(["a"-"z"]|["A"-"Z"])(["a"-"z" ]|["A"-"Z"]|["0"- "9"]|"_"|" "|"-"){0,31}>
// {System.out.println("ID-->"+image	);}
}
TOKEN:
{
 <OPERACION: ["+","-","*","/"]>
// {System.out.println("OPERACION -->"+image);} 
}

	
void leeArchivoJason() :{}
{
    leeInicioRegistroJason() | leeEstructuraDeDatos() | finRegistroJason()
}

void leeInicioRegistroJason():{}
{
  	<LCORCHETE> | (<ESPACIO>)+(<LLLAVES>)* | (<TABULACION>)+(<LLLAVES>)*
}

void leeEstructuraDeDatos():{}
{
     estructuraLineaJason()
}

void estructuraLineaJason():{}
{
     atributo() | indicador() | cuenta() | formula() 
}

void atributo():{}
{
 	<COMILLA><ID><COMILLA><DOSPUNTOS><ESPACIO>(valorCampo()|<LLLAVES>)
}

void valorCampo():{}
{
 	<COMILLA><ID><COMILLA>|<DIGITOS>|<FORMATOFECHA>
}
// estructuda indicador
void indicador():{}
{
  <INDICADORES><DOSPUNTOS><ESPACIO><LCORCHETE>
}
// estructura Cuenta
void cuenta():{}
{
  <CUENTAS><DOSPUNTOS><ESPACIO><LCORCHETE>(<LLLAVES>)*  
}
 void formula():{}
{
    <FORMULAS><DOSPUNTOS><ESPACIO><COMILLA>operacion()<COMILLA>
} 

void operacion():{}
{

 	expresionAritmetica()(<OPERACION>expresionAritmetica())*  

}
void expresionAritmetica():{}
{
 //    symbol() | (<LPAREN>)*<ID><OPERACION><ID>(<RPAREN>)* | <OPERACION><ID>

       symbol() | <LPAREN>operacion()<RPAREN> | <OPERACION>expresionAritmetica()  
}

void symbol():{}
{
     <DIGITOS>  | <ID>  
}	
	
void finRegistroJason():{}
{
 	(<COMA> | <RCORCHETE> | <RLLAVES>)+
	
}

boolean Programa():{}
{  
 try
 {	 
  leeArchivoJason()
  {
   // System.out.println("Se encontro la sentencia inicio Jason");
   return true;
  }
 }
 catch (ParseException e)
 {
//   System.out.println("Error 2: \"Se debe  cumplir con la sintaxis.\"");
   return true;
 }
 |<EOF> 
 {
//   System.out.println("Se finalizo el analisis");
   return false;
 } 
}
